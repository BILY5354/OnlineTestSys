<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itheima.dao.system.RoleDao">
    <!--配置实体类属性和数据库表中列的对应关系-->
    <resultMap id="BaseResultMap" type="com.itheima.domain.system.Role">
        <id column="role_id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>


    <!--配置查询的列名公共SQL语句-->
    <sql id="Base_Column_List">
        role_id, name, remark, create_time
    </sql>

    <!--配置查询所有，带条件-->
    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ss_role
    </select>

    <!--配置根据ID查询-->
    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ss_role
        where role_id = #{id,jdbcType=VARCHAR}
    </select>

    <!--配置根据id删除-->
    <delete id="delete" parameterType="java.lang.String">
        delete from ss_role
        where role_id = #{id,jdbcType=VARCHAR}
    </delete>

    <!--配置全字段插入，当某个字段没有值时，插入null-->
    <insert id="save" parameterType="com.itheima.domain.system.Role">
        insert into ss_role (role_id, name, remark, create_time)
        values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
        #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <!--配置全字段更新，当提供的数据为null时，数据库数据会被更新为null-->
    <update id="update" parameterType="com.itheima.domain.system.Role">
        update ss_role
        set name = #{name,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where role_id = #{id,jdbcType=VARCHAR}
    </update>

</mapper>